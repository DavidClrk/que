"use strict";function hasRole(e){return function(s,t,n){return s.user.roles.includes(e)?n():(s.flash("error","Access Denied."),t.redirect("/login"))}}function isAuthenticated(e,s,t){return e.user?t():(e.flash("error","You must be logged in."),e.session.redirectUrl=e.originalUrl,s.redirect("/login"))}function issueToken(e){Token({number:e.issued,service:e.name,issued_at:e.updated_at}).save(function(s){s?console.error(s):io.emit("tokenIssued",e)})}function callToken(e,s,t){var n=moment().startOf("day"),r=moment(n).add(1,"days");Token.findOneAndUpdate({service:e.name,number:e.current,issued_at:{$gte:n.toDate(),$lt:r.toDate()}},{$set:{counter:s,called_at:new Date,user:t.username}},{new:!0},function(s,t){t&&io.emit("tokenCalled",{service:e,token:t}),s&&console.error(s)})}var express=require("express"),bodyParser=require("body-parser"),session=require("express-session"),MongoStore=require("connect-mongo")(session),flash=require("flash"),passport=require("passport"),LocalStrategy=require("passport-local"),uuid=require("node-uuid"),moment=require("moment"),bcrypt=require("bcrypt-nodejs"),multer=require("multer"),storage=multer.diskStorage({destination:function(e,s,t){t(null,"public/videos/")},filename:function(e,s,t){t(null,"qvideo.mp4")}}),upload=multer({storage:storage}).single("qvideo"),mongoose=require("mongoose"),mongodbConnection="mongodb://localhost/qdb";mongoose.connect(mongodbConnection);var User=require("./app/models/user"),Service=require("./app/models/service"),Token=require("./app/models/token"),QOptions=require("./app/models/qoptions"),PORT=process.env.PORT||3e3,server=express();server.use(bodyParser.json()),server.use(bodyParser.urlencoded({extended:!1})),server.use(session({secret:process.env.SESSION_SECRET||"session_secret",resave:!1,saveUninitialized:!1,store:new MongoStore({url:process.env.MONGO_URL||mongodbConnection})})),server.use(flash()),server.use(express.static("public")),server.use(passport.initialize()),server.use(passport.session()),server.set("views","./views"),server.set("view engine","pug"),passport.use(new LocalStrategy(function(e,s,t){User.findOne({username:e},"-__v -created_at -updated_at",function(e,n){return e?t(e):n&&bcrypt.compareSync(s,n.password)?(n.password=void 0,t(null,n)):t(null,!1,{message:"Incorrect username or password."})})})),passport.serializeUser(function(e,s){s(null,e.username)}),passport.deserializeUser(function(e,s){User.findOne({username:e},"-password -__v -created_at -updated_at",function(e,t){s(e,t)})}),server.get("/",function(e,s){return s.render("index")}),server.get("/login",function(e,s){s.render("login")}),server.get("/logout",isAuthenticated,function(e,s){e.logout(),e.session.destroy(),s.redirect("/login")}),server.get("/counter",isAuthenticated,hasRole("counter"),function(e,s){s.render("counter")}),server.get("/manage",isAuthenticated,hasRole("admin"),function(e,s){s.render("manage")}),server.get("/initq",function(e,s){User.count({},function(e,t){if(e)console.error(e);else if(t<1){var n=["admin"],r=bcrypt.hashSync("qpassword"),o=new User({name:"admin user",username:"qadmin",password:r,roles:n});o.save(function(e){e?(console.error(e),delete o.password):s.redirect("/login")})}})}),server.get("/token",isAuthenticated,hasRole("token"),function(e,s){s.render("token")}),server.get("/tokenprint",isAuthenticated,hasRole("token"),function(e,s){var t=moment(new Date).format("DD/MM/YYYY hh:mm:ss");s.render("tokenprint",{datePrinted:t,service:"Population",tokenNo:1234})}),server.post("/uploadvideo",isAuthenticated,hasRole("admin"),function(e,s){upload(e,s,function(e){return e?(console.log(e),s.status(500).json({})):s.status(200).json({})})});var authRoutes=express.Router();authRoutes.post("/login",function(e,s,t){passport.authenticate("local",function(n,r,o){return n?t(n):r?void e.logIn(r,function(n){if(n)return t(n);if(e.session.redirectUrl){var r=e.session.redirectUrl;return e.session.redirectUrl=null,s.redirect(r)}return s.redirect("/counter")}):(e.session.authErr="Invalid username or password. Please try again.",s.redirect("/login"))})(e,s,t)}),authRoutes.get("/error",function(e,s){if(e.session.authErr){var t=e.session.authErr;return e.session.authErr=null,s.json({message:t})}return s.json({})}),server.use("/auth",authRoutes);var apiRoutes=express.Router();apiRoutes.get("/users",isAuthenticated,hasRole("admin"),function(e,s){User.find({},"-password -__v -created_at -updated_at -service -counter",function(e,t){s.send(t)})}),apiRoutes.post("/user",isAuthenticated,hasRole("admin"),function(e,s){var t=e.body.newUser.name,n=e.body.newUser.username,r=e.body.newUser.password,o=e.body.newUser.roles,a=bcrypt.hashSync(r),i=new User({name:t,username:n,password:a,roles:o});i.save(function(e){e?(console.error(e),11e3===e.code?s.status(409).json({message:"Duplicate username."}):s.status(400).json({message:"An error occured."}),delete i.password):User.find({username:i.username},"-password -__v -created_at -updated_at -service -counter",function(e,t){t&&t.length>0?s.status(201).json(t[0]):e&&s.status(500).json({message:"An error occured."})})})}),apiRoutes.put("/user",isAuthenticated,hasRole("admin"),function(e,s){var t=e.body.user;User.findOneAndUpdate({_id:t._id,username:t.username},{$set:{name:t.name,roles:t.roles}},function(e,n){n?s.status(200).json(t):e&&(console.error(e),s.status(404).json({message:"User not found."}))})}),apiRoutes.delete("/user/:id",isAuthenticated,hasRole("admin"),function(e,s){var t=e.params.id;User.findOneAndRemove({_id:t},function(e){e?(console.error(e),s.status(404).send()):s.status(200).send()})}),apiRoutes.patch("/user/:id",isAuthenticated,hasRole("admin"),function(e,s){var t=e.params.id,n=e.body.password;if(n&&""!=n.trim()){var r=bcrypt.hashSync(n);User.findOneAndUpdate({_id:t},{$set:{password:r}},function(e,t){e?(console.error(e),s.status(404)):s.status(200)})}}),apiRoutes.get("/services",isAuthenticated,function(e,s){Service.find({},"-__v -created_at -updated_at",function(e,t){t?s.send(t):s.status(404)})}),apiRoutes.get("/service/:name",isAuthenticated,function(e,s){var t=e.params.name;Service.findOne({name:t},"-__v",function(e,t){t?s.send(t):s.status(404)})}),apiRoutes.post("/service",isAuthenticated,hasRole("admin"),function(e,s){var t=e.body.newService.name,n=e.body.newService.first,r=e.body.newService.last,o=new Service({name:t,first:n,last:r});o.save(function(e){e?(console.error(e),11e3===e.code?s.status(409).json({message:"Duplicate service name."}):s.status(400).json({message:"An error occured."})):Service.find({name:o.name},"-__v -created_at -updated_at",function(e,t){t&&t.length>0?s.status(201).json(t[0]):e&&s.status(500).json({message:"An error occured."})})})}),apiRoutes.put("/service/:id",isAuthenticated,hasRole("admin"),function(e,s){var t=e.params.id,n=e.body.service;Service.findOneAndUpdate({_id:t},{$set:{name:n.name,first:n.first,last:n.last}},function(e,t){t?s.status(200).json(n):e&&(console.error(e),s.status(404).json({message:"Service not found."}))})}),apiRoutes.delete("/service/:id",isAuthenticated,function(e,s){var t=e.params.id;Service.findOneAndRemove({_id:t},function(e){e?(console.error(e),s.status(404).send()):s.status(200).send()})}),apiRoutes.patch("/service/:id",isAuthenticated,hasRole("admin"),function(e,s){var t=e.params.id;Service.findOneAndUpdate({_id:t},{$set:{current:void 0}},function(e,t){t?s.status(200).json(t):e&&(console.error(e),s.status(404).json({message:"Service not found."}))})}),apiRoutes.post("/issueToken/:servicename",isAuthenticated,hasRole("token"),function(e,s){var t=e.params.servicename;Service.findOne({name:t},function(e,n){n?moment(new Date).isSame(n.updated_at,"day")&&n.issued>=n.first?Service.findOneAndUpdate({name:t},{$inc:{issued:1},$set:{updated_at:new Date}},{new:!0},function(e,t){t?(issueToken(t),s.send(t)):e&&console.error(e)}):Service.findOneAndUpdate({name:t},{$set:{issued:n.first,current:n.first-1,updated_at:new Date}},{new:!0},function(e,t){t?(issueToken(t),s.send(t)):e&&console.error(e)}):e&&(console.error(e),s.status(404).send())})}),apiRoutes.post("/nexttoken/:servicename",isAuthenticated,hasRole("counter"),function(e,s){var t=e.params.servicename,n=e.body.counterId,r=moment().startOf("day"),o=moment(r).add(1,"days");if(!(n>0&&n<9))return void s.status(400).json({message:"Please selecte a valid counter."});Service.findOneAndUpdate({name:t,updated_at:{$gte:r.toDate(),$lt:o.toDate()},$where:"(this.issued >= this.first) && (this.issued > this.current)"},{$inc:{current:1}},{new:!0},function(t,r){r?(callToken(r,n,e.user),s.status(200).send(r)):t?(console.error(t),s.status(500).json({message:"An error occured."})):s.status(400).json({message:"Please select a valid service."})})}),apiRoutes.post("/recallToken/:servicename",isAuthenticated,hasRole("counter"),function(e,s){var t=e.params.servicename,n=e.body.counterId,r=e.body.tokenNo,o=moment().startOf("day"),a=moment(o).add(1,"days");if(!(n>0&&n<9))return void s.status(400).json({message:"Please selecte a valid counter."});Token.findOneAndUpdate({service:t,number:r,called_at:{$gte:o.toDate(),$lt:a.toDate()},user:e.user.username,counter:n},{$set:{called_at:new Date}},{new:!0},function(e,t){t&&(io.emit("tokenRecalled",{token:t}),s.status(200).send(t)),e&&console.error(e)})}),apiRoutes.get("/tokens",function(e,s){var t=moment().startOf("day"),n=moment(t).add(1,"days");Token.find({called_at:{$gte:t.toDate(),$lt:n.toDate()}},"service counter number",{limit:4,sort:{called_at:-1}},function(e,t){e?(console.error(e),s.status(500).json("An error occured.")):t?s.status(200).send(t):s.status(404).json({message:"Not Found."})})}),apiRoutes.get("/me",isAuthenticated,function(e,s){s.json({user:e.user})}),apiRoutes.get("/options/:key",isAuthenticated,hasRole("admin"),function(e,s){var t=e.params.key;QOptions.findOne({key:t},"-__v",function(e,t){t?s.send(t):s.status(404)})}),apiRoutes.patch("/options/:key",isAuthenticated,hasRole("admin"),function(e,s){var t=e.params.key,n=e.body.value;QOptions.findOneAndUpdate({key:t},{$set:{value:n}},{upsert:!0},function(e,t){t?s.status(200).json(t):e&&(console.error(e),s.status(404).json({message:"Option not found."}))})}),server.use("/api",apiRoutes);var http=server.listen(PORT,function(){console.log("The API is listening on port "+PORT)}),io=require("socket.io")(http);io.on("connection",function(e){});